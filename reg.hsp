; �ӂ��� Automatic-Fujitsubo
; (C) 2021 inucat. Under GNU GPL.
#packopt name "Fujitsubo"
; #include "hspext.as"	; hspext.dll required
#include "lang.hsp"
#include "regconst.as"
#include "hspinet.as"	; hspinet.dll required
#include "hsp3util.as"
#include "advapi32.as"
#uselib "shell32.dll"					; For Check Admin
#cfunc IsUserAnAdmin  "IsUserAnAdmin"
#cmpopt	varinit 1	; ���������̕ϐ��Q�Ƃ��G���[�ɂ���

#const N 7				; �ݒ�\�ȃt�H���_��7��
#const N_UP 13			; %UserProfile% ��13�̃t�H���_
#const CHK_W 128		; �`�F�b�N�{�b�N�X�E�{�^���̕�

#define APP_TITLE i18n("appTitle")
#define APP_VER "v1.0.1"

title APP_TITLE
dim isVisiblePC,N
keysPC=d3oKey, desKey, docKey1, dwnKey1, musKey1, picKey1, vidKey1, docKey2, dwnKey2, musKey2, picKey2, vidKey2
keyLabelsPC=i18n("3D Object"),i18n("Desktop"),i18n("Documents"),i18n("Downloads"),i18n("Music"),i18n("Pictures"),i18n("Video")
dim isVisibleUP,N_UP
keysUP=up3do, upDoc, upDwn, upMus, upPic, upVid, upCon, upLnk, upOne, upGam, upSea, upFa1, upDe1, upFa2, upDe2 
keyLabelsUP=i18n("3D Object"),i18n("Documents"),i18n("Downloads"),i18n("Music"),i18n("Pictures"),i18n("Video"),i18n("Contacts"),i18n("Links"),i18n("OneDrive"),i18n("Saved Games"),i18n("Searches"),i18n("Favorites"),i18n("Desktop")

; Detect Windows OS bit (x86 or not)
osBit=""
getenv osBit, "PROCESSOR_ARCHITECTURE"
if osBit == "x86" {;   osBit=="x86" --> is WOW64 or true 32bit Win?
	getenv osBit, "PROCESSOR_ARCHITEW6432" ;   32bit --> osBit="x86"
} logmes osBit

; Check Admin Privilege
if IsUserAnAdmin(){
}else{
	dialog i18n("adminDialog"),1,APP_TITLE
	; end
}

*load_keys
	screen 0,640,540 : cls 1 : objmode 2,1 : font "Yu Gothic UI",, 16 : mes i18n("loadReg") : logmes "......LOADING"
	; progbar 200,20 : IDPBar=stat : progbar_set IDPBar,100/(N+N_UP)
	;
	; This PC Keys
	repeat N
	keyHandle=0
	lpSubKey = subKeyPC +"\\"+ keysPC.cnt : logmes lpSubKey
	rstat = RegOpenKeyExA(HKLM, lpSubKey, 0, KEY_WOW64_64KEY | KEY_READ, varptr(keyHandle)) : logmes "OpenStat: "+rstat
	if rstat == 0 : isVisiblePC.cnt = 1 : else : if  rstat == 2 : isVisiblePC.cnt = 0 : else : dialog "ERROR",1 : end
	loop; : stop
	;
	; %UserProfile% Keys
	repeat N_UP
	keyHandle=0 : valueSize=8 : sdim plcValue,valueSize
	lpSubKey = subKeyUP +"\\"+ keysUP.cnt  : logmes lpSubKey
	rstat = RegOpenKeyExA(HKLM, lpSubKey, 0, KEY_WOW64_64KEY | KEY_READ, varptr(keyHandle))
	if stat == 0 {
		rstat = RegQueryValueExA(keyHandle, "ThisPCPolicy", 0, 0, varptr(plcValue), varptr(valueSize))
		rstat = RegCloseKey(keyHandle) 
	}
	if plcValue=="Hide" : isVisibleUP.cnt=0 : else : isVisibleUP.cnt=1
	logmes "OpenStat: "+stat+"; Policy: "+plcValue
	loop
	
*fresh_gui
	cls 1 : objmode 2,1 : font "Yu Gothic UI"
	objsize CHK_W
	mes i18n("PC") ; This PC
	button i18n("Hideall"), *all_hide
	button i18n("Showall"), *all_show
	repeat N
		chkbox keyLabelsPC.cnt, isVisiblePC.cnt
	loop
	
	pos CHK_W,0
	mes i18n("user's") ; %UserProfile%
	button i18n("Hideall"), *all_hide_up
	button i18n("Showall"), *all_show_up
	repeat N_UP
		chkbox keyLabelsUP.cnt, isVisibleUP.cnt
	loop

	pos CHK_W*2,0
	mes : button i18n("Reload"), *load_keys : mes
	mes : mes : mes : button i18n("Apply"), *apply
	mes : button i18n("About"), *about

	pos 0,400 : mes i18n("alsoHide")
	stop

*apply
	cls 1 : objmode 2,1 : font "Yu Gothic UI" : mes i18n("applying") : logmes "===APPLYING==="; Applying message
	; progbar 200,20 : IDPBar=stat : progbar_set IDPBar,100/(N+N_UP)
	;
	; This PC Keys
	repeat N
		keyHandle=0
		keyHandl2=0 : createdKeyHandle=0
		lpSubKey = subKeyPC +"\\"+ keysPC.cnt
		lpSubKe2 = subKeyPC +"\\"+ keysPC.(cnt+5)
		rstat = RegOpenKeyExA(HKLM, lpSubKey, 0, KEY_WOW64_64KEY | KEY_WRITE, varptr(keyHandle)) : logmes "OpenStat: "+rstat
		rstat = RegOpenKeyExA(HKLM, lpSubKe2, 0, KEY_WOW64_64KEY | KEY_WRITE, varptr(keyHandl2)) : logmes "OpenStat: "+rstat
		if isVisiblePC.cnt == 0 {
			rstat = RegDeleteKeyExA(keyHandle, "", KEY_WOW64_64KEY, 0) : logmes "DelStat: "+rstat
			rstat = RegDeleteKeyExA(keyHandl2, "", KEY_WOW64_64KEY, 0) : logmes "DelStat: "+rstat
			rstat = RegCloseKey(keyHandle) : logmes "CloStat: "+rstat
			rstat = RegCloseKey(keyHandl2) : logmes "CloStat: "+rstat
		} else {
			rstat = RegcreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_64KEY | KEY_WRITE, 0, varptr(createdKeyHandle), 0) : logmes "CreStat: "+rstat
			rstat = RegCloseKey(createdKeyHandle)
			rstat = RegcreateKeyExA(HKLM, lpSubKe2, 0, 0, 0, KEY_WOW64_64KEY | KEY_WRITE, 0, varptr(createdKeyHandle), 0) : logmes "CreStat: "+rstat
			rstat = RegCloseKey(createdKeyHandle)
		}
		;
		; for wow6432 redundant
		keyHandle=0
		keyHandl2=0 : createdKeyHandle=0
		lpSubKey = subKeyPC +"\\"+ keysPC.cnt
		lpSubKe2 = subKeyPC +"\\"+ keysPC.(cnt+5)
		rstat = RegOpenKeyExA(HKLM, lpSubKey, 0, KEY_WOW64_32KEY | KEY_WRITE, varptr(keyHandle)) : logmes "OpenStat: "+rstat
		rstat = RegOpenKeyExA(HKLM, lpSubKe2, 0, KEY_WOW64_32KEY | KEY_WRITE, varptr(keyHandl2)) : logmes "OpenStat: "+rstat
		if isVisiblePC.cnt == 0 {
			rstat = RegDeleteKeyExA(keyHandle, "", KEY_WOW64_32KEY, 0) : logmes "DelStat: "+rstat
			rstat = RegDeleteKeyExA(keyHandl2, "", KEY_WOW64_32KEY, 0) : logmes "DelStat: "+rstat
			rstat = RegCloseKey(keyHandle) : logmes "CloStat: "+rstat
			rstat = RegCloseKey(keyHandl2) : logmes "CloStat: "+rstat
		} else {
			rstat = RegcreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_32KEY | KEY_WRITE, 0, varptr(createdKeyHandle), 0) : logmes "CreStat: "+rstat
			rstat = RegCloseKey(createdKeyHandle)
			rstat = RegcreateKeyExA(HKLM, lpSubKe2, 0, 0, 0, KEY_WOW64_32KEY | KEY_WRITE, 0, varptr(createdKeyHandle), 0) : logmes "CreStat: "+rstat
			rstat = RegCloseKey(createdKeyHandle)
		}
	loop
	;
	; %UserProfile% application
	repeat N_UP
		if isVisibleUP.cnt == 0 : plcValue="Hide" : else : plcValue="Show"
		lpSubKey = subKeyUP +"\\"+ keysUP.cnt
		keyHandle=0
		
		rstat = RegCreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_64KEY | KEY_WRITE, 0, varptr(keyHandle), 0)
		rstat = RegSetValueExA(keyHandle, "ThisPCPolicy", 0, REG_SZ, plcValue, strlen(plcValue)+1)
		rstat = RegCloseKey(KeyHandle)
		rstat = RegCreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_32KEY | KEY_WRITE, 0, varptr(keyHandle), 0)
		rstat = RegSetValueExA(keyHandle, "ThisPCPolicy", 0, REG_SZ, plcValue, strlen(plcValue)+1)
		rstat = RegCloseKey(KeyHandle)
		
		lpSubKey = subKeyUP +"\\"+ keysUP.(cnt+2)
		keyHandle=0
		rstat = RegCreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_64KEY | KEY_WRITE, 0, varptr(keyHandle), 0)
		rstat = RegSetValueExA(keyHandle, "ThisPCPolicy", 0, REG_SZ, plcValue, strlen(plcValue)+1)
		rstat = RegCloseKey(KeyHandle)
		rstat = RegCreateKeyExA(HKLM, lpSubKey, 0, 0, 0, KEY_WOW64_32KEY | KEY_WRITE, 0, varptr(keyHandle), 0)
		rstat = RegSetValueExA(keyHandle, "ThisPCPolicy", 0, REG_SZ, plcValue, strlen(plcValue)+1)
		rstat = RegCloseKey(KeyHandle)
	loop
	dialog i18n("finish")
	goto *fresh_gui

*all_hide
	foreach isVisiblePC
		isVisiblePC.cnt=0
	loop
	goto *fresh_gui

*all_show
	foreach isVisiblePC
		isVisiblePC.cnt=1
	loop
	goto *fresh_gui

*all_show_up
	foreach isVisibleUP
		isVisibleUP.cnt=1
	loop
	goto *fresh_gui

*all_hide_up
	foreach isVisibleUP
		isVisibleUP.cnt=0
	loop
	goto *fresh_gui

*about
	dialog APP_TITLE +"\n"+ APP_VER +"\n(C) 2021 inucat\n\n"+i18n("detail"),,APP_TITLE
	stop